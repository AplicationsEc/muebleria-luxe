{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file://C%3A/proyectos/plantilla/fourth/lib/auth.ts"],"sourcesContent":["import { NextAuthOptions } from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport axios from \"axios\";\r\n\r\nexport const authOptions: NextAuthOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"email\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials?.email || !credentials?.password) {\r\n          return null;\r\n        }\r\n\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://localhost:3000/auth/login\",\r\n            {\r\n              email: credentials.email,\r\n              password: credentials.password,\r\n            }\r\n          );\r\n\r\n          const user = response.data;\r\n\r\n          if (user) {\r\n            return {\r\n              id: user.id,\r\n              email: user.email,\r\n              name: user.name,\r\n            };\r\n          } else {\r\n            return null;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error authorizing credentials:\", error);\r\n          return null;\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n  pages: {\r\n    signIn: \"/login\",\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n        token.email = user.email;\r\n        token.name = user.name;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      if (session.user) {\r\n        session.user.email = token.email;\r\n        session.user.name = token.name;\r\n      }\r\n      return session;\r\n    },\r\n  },\r\n};\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,OAAO;gBACT;gBAEA,IAAI;oBACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,oCACA;wBACE,OAAO,YAAY,KAAK;wBACxB,UAAU,YAAY,QAAQ;oBAChC;oBAGF,MAAM,OAAO,SAAS,IAAI;oBAE1B,IAAI,MAAM;wBACR,OAAO;4BACL,IAAI,KAAK,EAAE;4BACX,OAAO,KAAK,KAAK;4BACjB,MAAM,KAAK,IAAI;wBACjB;oBACF,OAAO;wBACL,OAAO;oBACT;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,kCAAkC;oBAChD,OAAO;gBACT;YACF;QACF;KACD;IACD,SAAS;QACP,UAAU;IACZ;IACA,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBAChC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAChC;YACA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/proyectos/plantilla/fourth/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["// app/api/auth/[...nextauth]/route.ts\r\nimport NextAuth from \"next-auth\";\r\nimport { authOptions } from \"@/lib/auth\";\r\n\r\nconst handler = NextAuth(authOptions);\r\n\r\nexport { handler as GET, handler as POST };"],"names":[],"mappings":"AAAA,sCAAsC;;;;;AACtC;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,6GAAA,CAAA,cAAW","debugId":null}}]
}